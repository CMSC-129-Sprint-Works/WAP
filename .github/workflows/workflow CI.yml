name: Final Workflow

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [dev ]
  pull_request:
    branches: [ dev ]
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
  
  #running flutter test
  flutter_test:
   runs-on: ubuntu-latest
   steps:
    # Setup the flutter environment.
     - uses: subosito/flutter-action@v1
       with:
        flutter-version: 2.0.5
        channel: "stable"
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
     - run: flutter pub get
    
    # Check for any formatting issues in the code.
     - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
     - run: flutter analyze --no-fatal-infos --no-fatal-warnings
    
    # Run widget tests for our flutter project.
     - run: flutter test
    
    # Build apk.
     - run: flutter build apk
    
    # Upload generated apk to the artifacts.
     - uses: actions/upload-artifact@v1
       with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
#running integration test
  android-integration-test:
    runs-on: ubuntu-latest
 
    name: run integration test on Android emulator
    # TODO(tianhaoz95): re-enable this once integration test works.
    strategy:
      #set of different configurations of the virtual environment.
      matrix:
        api-level: [29]
        target: [default]
      #  needs: flutter_test
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.2'
          channel: 'stable'
      - name: Run Flutter Driver tests
        #GitHub Action for installing, configuring and running Android Emulators (work only Mac OS)
        #https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v1
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: flutter drive --driver=test_driver/integration_test_driver.dart --target=integration_test/app_test.dart       
















 # buildFirebase:
  #  runs-on: ubuntu-latest
   # steps:
    #  - name: Firebase GitHub Action
     #   uses: jonahsnider/firebase-action@1.0.7
      #  env:
       #   PROJECT_ID: "waplogin-469a3"
        #  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        #with:
         # args: deploy  
