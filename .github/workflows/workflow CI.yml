name: Final Workflow
on:
  push:
    branches: [dev ]
  pull_request:
    branches: [ dev ]
    
  #schedule:
    #this triggers the workflow every day at 5:00 am and 6:00pm everyday
   # - cron:  '0 5,18 * * *'
  create:
  delete:
  deployment:
    
# Define the Jobs we want to run as part of this Workflow
jobs:
  # Define our build and test Job
   build-and-test: 
   
    # We want to run this Job on an Ubuntu VM 
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code using V1 of the standard checkout Action
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
       
       # Use the standard Java Action to setup Java 
      - uses: actions/setup-java@v1
        with:
          # we want the latest Java 12
          java-version: '12.x'

        # Use the community Action to install Flutter
      - uses: subosito/flutter-action@v1
        with:
          # we want the stable channel
          channel: 'stable'  
          
        # Get flutter packages
      - run: flutter pub get
       # Analyze our Dart code
      #- run: flutter analyze
      # Run our tests
      - run: flutter test
      
   #runs unit tests located in the project.  (- name: Assemble app debug APK)  
     # - name: Run Unit tests
      #  path: 
       # run: bash ./gradlew test --stacktrace
        #env:
         #  WAP_API_KEY: ${{ secrets.WAP_API_KEY }}   
      
    # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v2
        with: 
         name: release-apk
         path: build/app/outputs/apk/release/app-release.apk  
         
         
   Firebase:
    runs-on: ubuntu-latest
 
    steps: 
      - uses: jonahsnider/firebase-action@1.0.7
        env:
          PROJECT_ID: "waplogin-469a3" 
          FIREBASE_TOKEN: ${{ secrets.teydQyEWbeGHoWiCzL7pO7MKGI7GD7uFpl0uBTgG}}
       # with:
        #  args: deploy
